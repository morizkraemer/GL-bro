// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
    id          Int         @id @default(autoincrement())
    name        String
    venueId     Int
    venue       Venue       @relation(fields: [venueId], references: [id])
    eventDate   DateTime
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    guestLists  GuestList[]

    @@index([venueId])
}

model Venue {
    id          Int         @id @default(autoincrement())
    name        String
    address     String?
    capacity    Int
    events      Event[]
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model GuestList {
    id          Int         @id @default(autoincrement())
    name        String
    eventId     Int
    event       Event       @relation(fields: [eventId], references: [id], onDelete: Cascade)
    guests      Guest[]
    maxCapacity Int?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    @@index([eventId])
}

model Guest {
    id          Int         @id @default(autoincrement())
    name        String
    email       String      @unique
    guestListId Int
    guestList   GuestList   @relation(fields: [guestListId], references: [id], onDelete: Cascade)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    @@index([guestListId])
}
