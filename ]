import { Link, User, Event, Venue, GuestList, Guest, Prisma } from "@prisma/client";
// Base types
export type {Link, User, Event, Venue, GuestList, Guest}; 


// API response types
export type EventWithVenue = Prisma.EventGetPayload<{
    include: {
        venue: true
    }
}>

export type EventWithDetails = Prisma.EventGetPayload<{
        include: {
            venue: true,
            guestLists: {
                include: {
                    guests: true
                }
            },
            createdByUser: true,
        },
}>

export type GuestListWithGuests = Prisma.GuestListGetPayload<{
    include: {
        guests: true
    }
}>
export interface GuestListWithGuests extends GuestList {
    guests: Guest[]
}
export interface GuestListWithDetails extends GuestList {
    guests: Guest[];
    event: EventWithVenue;
    createdByUser: User;
}

export type LinkNew = Prisma.LinkGetPayload<{
  include: {
    GuestList: {
      include: {
        event: {
          include: {
            venue: true
          }
        },
        guests: true
      }
    }
  }
}>

export interface LinkWithDetails extends Link {
  GuestList: {
    id: number
    name: string
    event: {
      id: number
      name: string
      venue: Venue
    }
    guests: Guest[]
  }
}

// Form types
export interface GuestListFormValues {
    id?: number;
    name: string;
    maxCapacity: number;
}

export interface EventFormValues {
    eventName: string;
    eventDateTime: Date;
    venueId: number;
    guestLists: GuestListFormValues[];
}
